# Generated by Django 4.2 on 2024-02-16 12:16

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_name', models.CharField(max_length=255)),
                ('analysis_name_ru', models.CharField(max_length=255, null=True)),
                ('analysis_name_en', models.CharField(max_length=255, null=True)),
                ('analysis_name_tr', models.CharField(max_length=255, null=True)),
                ('analysis_description', models.TextField()),
                ('analysis_description_ru', models.TextField(null=True)),
                ('analysis_description_en', models.TextField(null=True)),
                ('analysis_description_tr', models.TextField(null=True)),
                ('price', models.IntegerField()),
                ('Patient_instructions', models.TextField()),
                ('Patient_instructions_ru', models.TextField(null=True)),
                ('Patient_instructions_en', models.TextField(null=True)),
                ('Patient_instructions_tr', models.TextField(null=True)),
                ('procedure_description', models.TextField()),
                ('procedure_description_ru', models.TextField(null=True)),
                ('procedure_description_en', models.TextField(null=True)),
                ('procedure_description_tr', models.TextField(null=True)),
                ('expected_results', models.TextField()),
                ('expected_results_ru', models.TextField(null=True)),
                ('expected_results_en', models.TextField(null=True)),
                ('expected_results_tr', models.TextField(null=True)),
                ('results_delivery_time', models.CharField(max_length=255)),
                ('results_delivery_time_ru', models.CharField(max_length=255, null=True)),
                ('results_delivery_time_en', models.CharField(max_length=255, null=True)),
                ('results_delivery_time_tr', models.CharField(max_length=255, null=True)),
                ('sale', models.BooleanField(default=False)),
                ('promotion', models.BooleanField(default=False)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Анализ',
                'verbose_name_plural': 'Анализы',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostic_category_name', models.CharField(blank=True, max_length=100)),
                ('diagnostic_category_name_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('diagnostic_category_name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('diagnostic_category_name_tr', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'категорий диагностики',
                'verbose_name_plural': 'Категории диагностики',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_tr', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='RehabilitationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rehabilitation_category_name', models.CharField(blank=True, max_length=100)),
                ('rehabilitation_category_name_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('rehabilitation_category_name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('rehabilitation_category_name_tr', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.region')),
            ],
            options={
                'verbose_name': 'категорий реабилиции',
                'verbose_name_plural': 'Категории реабилитации',
            },
        ),
        migrations.CreateModel(
            name='Rehabilitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rehabilitation_name', models.CharField(max_length=100)),
                ('rehabilitation_name_ru', models.CharField(max_length=100, null=True)),
                ('rehabilitation_name_en', models.CharField(max_length=100, null=True)),
                ('rehabilitation_name_tr', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(upload_to='image_rehabilitation/')),
                ('rehabilitation_description', models.TextField()),
                ('rehabilitation_description_ru', models.TextField(null=True)),
                ('rehabilitation_description_en', models.TextField(null=True)),
                ('rehabilitation_description_tr', models.TextField(null=True)),
                ('rehabilitation_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.rehabilitationcategory')),
            ],
            options={
                'verbose_name': 'Реабилитация',
                'verbose_name_plural': 'Реабилитации',
            },
        ),
        migrations.CreateModel(
            name='PolyclinicCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polyclinic_category_name', models.CharField(blank=True, max_length=100)),
                ('polyclinic_category_name_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('polyclinic_category_name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('polyclinic_category_name_tr', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.region')),
            ],
            options={
                'verbose_name': 'категорий поликлиники',
                'verbose_name_plural': 'Категории поликлиники',
            },
        ),
        migrations.CreateModel(
            name='Polyclinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polyclinic_name', models.CharField(max_length=100)),
                ('polyclinic_name_ru', models.CharField(max_length=100, null=True)),
                ('polyclinic_name_en', models.CharField(max_length=100, null=True)),
                ('polyclinic_name_tr', models.CharField(max_length=100, null=True)),
                ('price_first_meet', models.IntegerField()),
                ('price_second_meet', models.IntegerField()),
                ('about_service', ckeditor.fields.RichTextField()),
                ('about_service_ru', ckeditor.fields.RichTextField(null=True)),
                ('about_service_en', ckeditor.fields.RichTextField(null=True)),
                ('about_service_tr', ckeditor.fields.RichTextField(null=True)),
                ('about_procedure', ckeditor.fields.RichTextField()),
                ('about_procedure_ru', ckeditor.fields.RichTextField(null=True)),
                ('about_procedure_en', ckeditor.fields.RichTextField(null=True)),
                ('about_procedure_tr', ckeditor.fields.RichTextField(null=True)),
                ('polyclinic_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.polycliniccategory')),
            ],
            options={
                'verbose_name': 'Поликлиника',
                'verbose_name_plural': 'Поликлиники',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostic_subcategory_name', models.CharField(max_length=100)),
                ('diagnostic_subcategory_name_ru', models.CharField(max_length=100, null=True)),
                ('diagnostic_subcategory_name_en', models.CharField(max_length=100, null=True)),
                ('diagnostic_subcategory_name_tr', models.CharField(max_length=100, null=True)),
                ('diagnostic_subcategory_description', models.TextField()),
                ('diagnostic_subcategory_description_ru', models.TextField(null=True)),
                ('diagnostic_subcategory_description_en', models.TextField(null=True)),
                ('diagnostic_subcategory_description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='image_diagnostic/')),
                ('diagnostic_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.diagnosticcategory')),
            ],
            options={
                'verbose_name': 'Подкатегория диагностики',
                'verbose_name_plural': 'Подкатегории диагностики',
            },
        ),
        migrations.AddField(
            model_name='diagnosticcategory',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.region'),
        ),
        migrations.CreateModel(
            name='Diagnostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostic_name', models.CharField(max_length=100)),
                ('diagnostic_name_ru', models.CharField(max_length=100, null=True)),
                ('diagnostic_name_en', models.CharField(max_length=100, null=True)),
                ('diagnostic_name_tr', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(upload_to='image_diagnostic/')),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('sale', models.BooleanField(default=False)),
                ('promotion', models.BooleanField(default=False)),
                ('diagnostic_subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='servises.diagnosticsubcategory')),
            ],
            options={
                'verbose_name': 'Диагностика',
                'verbose_name_plural': 'Диагностики',
            },
        ),
        migrations.CreateModel(
            name='AnalysisSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory_name', models.CharField(max_length=255)),
                ('subcategory_name_ru', models.CharField(max_length=255, null=True)),
                ('subcategory_name_en', models.CharField(max_length=255, null=True)),
                ('subcategory_name_tr', models.CharField(max_length=255, null=True)),
                ('subcategory_description', models.TextField()),
                ('subcategory_description_ru', models.TextField(null=True)),
                ('subcategory_description_en', models.TextField(null=True)),
                ('subcategory_description_tr', models.TextField(null=True)),
                ('analyse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servises.analysis')),
            ],
            options={
                'verbose_name': 'Подкатегория анализа',
                'verbose_name_plural': 'Подкатегории анализов',
            },
        ),
        migrations.AddField(
            model_name='analysis',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='servises.region'),
        ),
        migrations.CreateModel(
            name='AddressCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_tr', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Полное описание')),
                ('description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Полное описание')),
                ('description_en', ckeditor.fields.RichTextField(null=True, verbose_name='Полное описание')),
                ('description_tr', ckeditor.fields.RichTextField(null=True, verbose_name='Полное описание')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_region', to='servises.region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Центр-адрес',
                'verbose_name_plural': 'Центры-адреса',
            },
        ),
    ]
